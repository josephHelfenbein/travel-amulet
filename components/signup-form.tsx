import styles from './login-form.module.css';
import { Formik, Field, Form, FormikHelpers } from 'formik'; 
import FormikSelect from "./FormikSelect";
import validationSchema from "./validationSchema";
import {useState} from 'react';

import { fetchUserExistsEmail, postUser } from 'lib/http';
import { useRouter } from 'next/router';

interface Values{
    username: string;
    password: string;
    name: string;
    singleSelect: string;
}
const countryOptions = [
    { value: "AD", label: "Andorra ğŸ‡¦ğŸ‡©" },
    { value: "AE", label: "United Arab Emirates ğŸ‡¦ğŸ‡ª" },
    { value: "AF", label: "Afghanistan ğŸ‡¦ğŸ‡«" },
    { value: "AG", label: "Antigua and Barbuda ğŸ‡¦ğŸ‡¬" },
    { value: "AL", label: "Albania ğŸ‡¦ğŸ‡±" },
    { value: "AM", label: "Armenia ğŸ‡¦ğŸ‡²" },
    { value: "AO", label: "Angola ğŸ‡¦ğŸ‡´" },
    { value: "AR", label: "Argentina ğŸ‡¦ğŸ‡·" },
    { value: "AT", label: "Austria ğŸ‡¦ğŸ‡¹" },
    { value: "AU", label: "Australia ğŸ‡¦ğŸ‡º" },
    { value: "AZ", label: "Azerbaijan ğŸ‡¦ğŸ‡¿" },
    { value: "BA", label: "Bosnia and Herzegovina ğŸ‡§ğŸ‡¦" },
    { value: "BB", label: "Barbados ğŸ‡§ğŸ‡§" },
    { value: "BD", label: "Bangladesh ğŸ‡§ğŸ‡©" },
    { value: "BE", label: "Belgium ğŸ‡§ğŸ‡ª" },
    { value: "BF", label: "Burkina Faso ğŸ‡§ğŸ‡«" },
    { value: "BG", label: "Bulgaria ğŸ‡§ğŸ‡¬" },
    { value: "BH", label: "Bahrain ğŸ‡§ğŸ‡­" },
    { value: "BI", label: "Burundi ğŸ‡§ğŸ‡®" },
    { value: "BJ", label: "Benin ğŸ‡§ğŸ‡¯" },
    { value: "BN", label: "Brunei ğŸ‡§ğŸ‡³" },
    { value: "BO", label: "Bolivia ğŸ‡§ğŸ‡´" },
    { value: "BR", label: "Brazil ğŸ‡§ğŸ‡·" },
    { value: "BS", label: "Bahamas ğŸ‡§ğŸ‡¸" },
    { value: "BT", label: "Bhutan ğŸ‡§ğŸ‡¹" },
    { value: "BW", label: "Botswana ğŸ‡§ğŸ‡¼" },
    { value: "BY", label: "Belarus ğŸ‡§ğŸ‡¾" },
    { value: "BZ", label: "Belize ğŸ‡§ğŸ‡¿" },
    { value: "CA", label: "Canada ğŸ‡¨ğŸ‡¦" },
    { value: "CD", label: "Democratic Republic of the Congo ğŸ‡¨ğŸ‡©" },
    { value: "CF", label: "Central African Republic ğŸ‡¨ğŸ‡«" },
    { value: "CG", label: "Republic of the Congo ğŸ‡¨ğŸ‡¬" },
    { value: "CH", label: "Switzerland ğŸ‡¨ğŸ‡­" },
    { value: "CI", label: "CÃ´te d'Ivoire ğŸ‡¨ğŸ‡®" },
    { value: "CL", label: "Chile ğŸ‡¨ğŸ‡±" },
    { value: "CM", label: "Cameroon ğŸ‡¨ğŸ‡²" },
    { value: "CN", label: "China ğŸ‡¨ğŸ‡³" },
    { value: "CO", label: "Colombia ğŸ‡¨ğŸ‡´" },
    { value: "CR", label: "Costa Rica ğŸ‡¨ğŸ‡·" },
    { value: "CU", label: "Cuba ğŸ‡¨ğŸ‡º" },
    { value: "CV", label: "Cabo Verde ğŸ‡¨ğŸ‡»" },
    { value: "CY", label: "Cyprus ğŸ‡¨ğŸ‡¾" },
    { value: "CZ", label: "Czechia ğŸ‡¨ğŸ‡¿" },
    { value: "DE", label: "Germany ğŸ‡©ğŸ‡ª" },
    { value: "DJ", label: "Djibouti ğŸ‡©ğŸ‡¯" },
    { value: "DK", label: "Denmark ğŸ‡©ğŸ‡°" },
    { value: "DM", label: "Dominica ğŸ‡©ğŸ‡²" },
    { value: "DO", label: "Dominican Republic ğŸ‡©ğŸ‡´" },
    { value: "DZ", label: "Algeria ğŸ‡©ğŸ‡¿" },
    { value: "EC", label: "Ecuador ğŸ‡ªğŸ‡¨" },
    { value: "EE", label: "Estonia ğŸ‡ªğŸ‡ª" },
    { value: "EG", label: "Egypt ğŸ‡ªğŸ‡¬" },
    { value: "ER", label: "Eritrea ğŸ‡ªğŸ‡·" },
    { value: "ES", label: "Spain ğŸ‡ªğŸ‡¸" },
    { value: "ET", label: "Ethiopia ğŸ‡ªğŸ‡¹" },
    { value: "FI", label: "Finland ğŸ‡«ğŸ‡®" },
    { value: "FJ", label: "Fiji ğŸ‡«ğŸ‡¯" },
    { value: "FM", label: "Micronesia ğŸ‡«ğŸ‡²" },
    { value: "FR", label: "France ğŸ‡«ğŸ‡·" },
    { value: "GA", label: "Gabon ğŸ‡¬ğŸ‡¦" },
    { value: "GB", label: "United Kingdom ğŸ‡¬ğŸ‡§" },
    { value: "GD", label: "Grenada ğŸ‡¬ğŸ‡©" },
    { value: "GE", label: "Georgia ğŸ‡¬ğŸ‡ª" },
    { value: "GH", label: "Ghana ğŸ‡¬ğŸ‡­" },
    { value: "GM", label: "Gambia ğŸ‡¬ğŸ‡²" },
    { value: "GN", label: "Guinea ğŸ‡¬ğŸ‡³" },
    { value: "GQ", label: "Equatorial Guinea ğŸ‡¬ğŸ‡¶" },
    { value: "GR", label: "Greece ğŸ‡¬ğŸ‡·" },
    { value: "GT", label: "Guatemala ğŸ‡¬ğŸ‡¹" },
    { value: "GW", label: "Guinea-Bissau ğŸ‡¬ğŸ‡¼" },
    { value: "GY", label: "Guyana ğŸ‡¬ğŸ‡¾" },
    { value: "HN", label: "Honduras ğŸ‡­ğŸ‡³" },
    { value: "HR", label: "Croatia ğŸ‡­ğŸ‡·" },
    { value: "HT", label: "Haiti ğŸ‡­ğŸ‡¹" },
    { value: "HU", label: "Hungary ğŸ‡­ğŸ‡º" },
    { value: "ID", label: "Indonesia ğŸ‡®ğŸ‡©" },
    { value: "IE", label: "Ireland ğŸ‡®ğŸ‡ª" },
    { value: "IL", label: "Israel ğŸ‡®ğŸ‡±" },
    { value: "IN", label: "India ğŸ‡®ğŸ‡³" },
    { value: "IQ", label: "Iraq ğŸ‡®ğŸ‡¶" },
    { value: "IR", label: "Iran ğŸ‡®ğŸ‡·" },
    { value: "IS", label: "Iceland ğŸ‡®ğŸ‡¸" },
    { value: "IT", label: "Italy ğŸ‡®ğŸ‡¹" },
    { value: "JM", label: "Jamaica ğŸ‡¯ğŸ‡²" },
    { value: "JO", label: "Jordan ğŸ‡¯ğŸ‡´" },
    { value: "JP", label: "Japan ğŸ‡¯ğŸ‡µ" },
    { value: "KE", label: "Kenya ğŸ‡°ğŸ‡ª" },
    { value: "KG", label: "Kyrgyzstan ğŸ‡°ğŸ‡¬" },
    { value: "KH", label: "Cambodia ğŸ‡°ğŸ‡­" },
    { value: "KI", label: "Kiribati ğŸ‡°ğŸ‡®" },
    { value: "KM", label: "Comoros ğŸ‡°ğŸ‡²" },
    { value: "KN", label: "Saint Kitts and Nevis ğŸ‡°ğŸ‡³" },
    { value: "KP", label: "North Korea ğŸ‡°ğŸ‡µ" },
    { value: "KR", label: "South Korea ğŸ‡°ğŸ‡·" },
    { value: "KW", label: "Kuwait ğŸ‡°ğŸ‡¼" },
    { value: "KZ", label: "Kazakhstan ğŸ‡°ğŸ‡¿" },
    { value: "LA", label: "Laos ğŸ‡±ğŸ‡¦" },
    { value: "LB", label: "Lebanon ğŸ‡±ğŸ‡§" },
    { value: "LC", label: "Saint Lucia ğŸ‡±ğŸ‡¨" },
    { value: "LI", label: "Liechtenstein ğŸ‡±ğŸ‡®" },
    { value: "LK", label: "Sri Lanka ğŸ‡±ğŸ‡°" },
    { value: "LR", label: "Liberia ğŸ‡±ğŸ‡·" },
    { value: "LS", label: "Lesotho ğŸ‡±ğŸ‡¸" },
    { value: "LT", label: "Lithuania ğŸ‡±ğŸ‡¹" },
    { value: "LU", label: "Luxembourg ğŸ‡±ğŸ‡º" },
    { value: "LV", label: "Latvia ğŸ‡±ğŸ‡»" },
    { value: "LY", label: "Libya ğŸ‡±ğŸ‡¾" },
    { value: "MA", label: "Morocco ğŸ‡²ğŸ‡¦" },
    { value: "MC", label: "Monaco ğŸ‡²ğŸ‡¨" },
    { value: "MD", label: "Moldova ğŸ‡²ğŸ‡©" },
    { value: "ME", label: "Montenegro ğŸ‡²ğŸ‡ª" },
    { value: "MG", label: "Madagascar ğŸ‡²ğŸ‡¬" },
    { value: "MH", label: "Marshall Islands ğŸ‡²ğŸ‡­" },
    { value: "MK", label: "North Macedonia ğŸ‡²ğŸ‡°" },
    { value: "ML", label: "Mali ğŸ‡²ğŸ‡±" },
    { value: "MM", label: "Myanmar ğŸ‡²ğŸ‡²" },
    { value: "MN", label: "Mongolia ğŸ‡²ğŸ‡³" },
    { value: "MR", label: "Mauritania ğŸ‡²ğŸ‡·" },
    { value: "MT", label: "Malta ğŸ‡²ğŸ‡¹" },
    { value: "MU", label: "Mauritius ğŸ‡²ğŸ‡º" },
    { value: "MV", label: "Maldives ğŸ‡²ğŸ‡»" },
    { value: "MW", label: "Malawi ğŸ‡²ğŸ‡¼" },
    { value: "MX", label: "Mexico ğŸ‡²ğŸ‡½" },
    { value: "MY", label: "Malaysia ğŸ‡²ğŸ‡¾" },
    { value: "MZ", label: "Mozambique ğŸ‡²ğŸ‡¿" },
    { value: "NA", label: "Namibia ğŸ‡³ğŸ‡¦" },
    { value: "NE", label: "Niger ğŸ‡³ğŸ‡ª" },
    { value: "NG", label: "Nigeria ğŸ‡³ğŸ‡¬" },
    { value: "NI", label: "Nicaragua ğŸ‡³ğŸ‡®" },
    { value: "NL", label: "Netherlands ğŸ‡³ğŸ‡±" },
    { value: "NO", label: "Norway ğŸ‡³ğŸ‡´" },
    { value: "NP", label: "Nepal ğŸ‡³ğŸ‡µ" },
    { value: "NR", label: "Nauru ğŸ‡³ğŸ‡·" },
    { value: "NZ", label: "New Zealand ğŸ‡³ğŸ‡¿" },
    { value: "OM", label: "Oman ğŸ‡´ğŸ‡²" },
    { value: "PA", label: "Panama ğŸ‡µğŸ‡¦" },
    { value: "PE", label: "Peru ğŸ‡µğŸ‡ª" },
    { value: "PG", label: "Papua New Guinea ğŸ‡µğŸ‡¬" },
    { value: "PH", label: "Philippines ğŸ‡µğŸ‡­" },
    { value: "PK", label: "Pakistan ğŸ‡µğŸ‡°" },
    { value: "PL", label: "Poland ğŸ‡µğŸ‡±" },
    { value: "PS", label: "Palestine State ğŸ‡µğŸ‡¸" },
    { value: "PT", label: "Portugal ğŸ‡µğŸ‡¹" },
    { value: "PW", label: "Palau ğŸ‡µğŸ‡¼" },
    { value: "PY", label: "Paraguay ğŸ‡µğŸ‡¾" },
    { value: "QA", label: "Qatar ğŸ‡¶ğŸ‡¦" },
    { value: "RO", label: "Romania ğŸ‡·ğŸ‡´" },
    { value: "RS", label: "Serbia ğŸ‡·ğŸ‡¸" },
    { value: "RU", label: "Russia ğŸ‡·ğŸ‡º" },
    { value: "RW", label: "Rwanda ğŸ‡·ğŸ‡¼" },
    { value: "SA", label: "Saudi Arabia ğŸ‡¸ğŸ‡¦" },
    { value: "SB", label: "Solomon Islands ğŸ‡¸ğŸ‡§" },
    { value: "SC", label: "Seychelles ğŸ‡¸ğŸ‡¨" },
    { value: "SD", label: "Sudan ğŸ‡¸ğŸ‡©" },
    { value: "SE", label: "Sweden ğŸ‡¸ğŸ‡ª" },
    { value: "SG", label: "Singapore ğŸ‡¸ğŸ‡¬" },
    { value: "SI", label: "Slovenia ğŸ‡¸ğŸ‡®" },
    { value: "SK", label: "Slovakia ğŸ‡¸ğŸ‡°" },
    { value: "SL", label: "Sierra Leone ğŸ‡¸ğŸ‡±" },
    { value: "SM", label: "San Marino ğŸ‡¸ğŸ‡²" },
    { value: "SN", label: "Senegal ğŸ‡¸ğŸ‡³" },
    { value: "SO", label: "Somalia ğŸ‡¸ğŸ‡´" },
    { value: "SR", label: "Suriname ğŸ‡¸ğŸ‡·" },
    { value: "SS", label: "South Sudan ğŸ‡¸ğŸ‡¸" },
    { value: "ST", label: "Sao Tome and Principe ğŸ‡¸ğŸ‡¹" },
    { value: "SV", label: "El Salvador ğŸ‡¸ğŸ‡»" },
    { value: "SY", label: "Syria ğŸ‡¸ğŸ‡¾" },
    { value: "SZ", label: "Eswatini ğŸ‡¸ğŸ‡¿" },
    { value: "TD", label: "Chad ğŸ‡¹ğŸ‡©" },
    { value: "TG", label: "Togo ğŸ‡¹ğŸ‡¬" },
    { value: "TH", label: "Thailand ğŸ‡¹ğŸ‡­" },
    { value: "TJ", label: "Tajikistan ğŸ‡¹ğŸ‡¯" },
    { value: "TL", label: "Timor-Leste ğŸ‡¹ğŸ‡±" },
    { value: "TM", label: "Turkmenistan ğŸ‡¹ğŸ‡²" },
    { value: "TN", label: "Tunisia ğŸ‡¹ğŸ‡³" },
    { value: "TO", label: "Tonga ğŸ‡¹ğŸ‡´" },
    { value: "TR", label: "TÃ¼rkiye ğŸ‡¹ğŸ‡·" },
    { value: "TT", label: "Trinidad and Tobago ğŸ‡¹ğŸ‡¹" },
    { value: "TV", label: "Tuvalu ğŸ‡¹ğŸ‡»" },
    { value: "TZ", label: "Tanzania ğŸ‡¹ğŸ‡¿" },
    { value: "UA", label: "Ukraine ğŸ‡ºğŸ‡¦" },
    { value: "UG", label: "Uganda ğŸ‡ºğŸ‡¬" },
    { value: "US", label: "United States ğŸ‡ºğŸ‡¸" },
    { value: "UY", label: "Uruguay ğŸ‡ºğŸ‡¾" },
    { value: "UZ", label: "Uzbekistan ğŸ‡ºğŸ‡¿" },
    { value: "VA", label: "Holy See ğŸ‡»ğŸ‡¦" },
    { value: "VC", label: "Saint Vincent and the Grenadines ğŸ‡»ğŸ‡¨" },
    { value: "VE", label: "Venezuela ğŸ‡»ğŸ‡ª" },
    { value: "VN", label: "Vietnam ğŸ‡»ğŸ‡³" },
    { value: "VU", label: "Vanuatu ğŸ‡»ğŸ‡º" },
    { value: "WS", label: "Samoa ğŸ‡¼ğŸ‡¸" },
    { value: "YE", label: "Yemen ğŸ‡¾ğŸ‡ª" },
    { value: "ZA", label: "South Africa ğŸ‡¿ğŸ‡¦" },
    { value: "ZM", label: "Zambia ğŸ‡¿ğŸ‡²" },
    { value: "ZW", label: "Zimbabwe ğŸ‡¿ğŸ‡¼" },
];
const SignUpForm = () => {
    const [error, setError] = useState('');
    const router = useRouter();
    return (<div className={styles.login_box + ' card p-5 '}>
        <h1 className="display-6 mb-3">Sign Up</h1>
        <Formik
            initialValues={{
                username: '',
                singleSelect: '',
                name: '',
                password: '',
            }}
            validationSchema={validationSchema}

            onSubmit={ (values: Values,
                { setSubmitting }: FormikHelpers<Values>
            ) => {
                setTimeout(
                (async () => {
                    let userExists = await fetchUserExistsEmail(values.username);
                    if(userExists.error){
                        setSubmitting(false);
                    }
                    if(userExists.content) setError('Account already exists.');
                    else {
                        let userPost = await postUser({name: values.name, email: values.username, country: values.singleSelect, password:values.password, preferences:'', results:''});
                        router.push('/login');
                    }
                    setSubmitting(false);
                }), 500);
            }}
        >
            <Form>
                <div className="form-floating mb-3">
                    <Field className="form-control" id="name" name="name" placeholder="Name" required/>
                    <label htmlFor="name">Name</label>
                </div>

                <div className='mb-3'>
                    <FormikSelect
                        name="singleSelect"
                        label="Country..."
                        options={countryOptions}
                    />
                </div>
                

                <div className="form-floating mb-3">
                    <Field className="form-control" id="username" name="username" placeholder="Email" type="email" aria-describedby="usernameHelp" required/>
                    <label htmlFor="username">Email</label>
                </div>
                <div className="form-floating mb-3">
                    <Field className="form-control" type="password" id="password" name="password" placeholder="Password" required/>
                    <label htmlFor="password">Password</label>
                </div>
                {error != '' &&
                    <p className='Error'>{error}</p>
                }
                
                <div className='row g-3'>
                    <div className='col-md-8'>
                        <button type="submit" className="btn btn-primary">Sign Up</button>
                    </div>
                    <div className='col-md-4'>
                        <a href='./login'>Login</a>
                    </div> 
                </div>
            </Form>
        </Formik>
    </div>);
}

export default SignUpForm;